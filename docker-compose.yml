version: '3.7'

services:
  backend:
    container_name: m4p0-strapi
    #env_file:
    #  .env
    # image: "${DOCKER_EXTERNAL_REPO}/${DOCKER_BACKEND_IMAGE}:${DOCKER_IMAGE_VERSION}"
    build:
      context: ./strapi/app
      dockerfile: ../docker/Dockerfile
    ports:
      - "1337:1337"
    volumes:
      - ./strapi/app:/srv/app
    environment:
      NODE_ENV: development
      # MAIL_TRANSPORT_HOST: ${MAIL_TRANSPORT_HOST} 
      # MAIL_TRANSPORT_PORT: ${MAIL_TRANSPORT_PORT} 
      # MAIL_TRANSPORT_SECURITY: ${MAIL_TRANSPORT_SECURITY} 
      # MAIL_TRANSPORT_USER: ${MAIL_TRANSPORT_USER} 
      # MAIL_TRANSPORT_PASSWORD: ${MAIL_TRANSPORT_PASSWORD} 
      # MAIL_TRANSPORT_FROM_ADDRESS: ${MAIL_TRANSPORT_FROM_ADDRESS} 
      # MAIL_TRANSPORT_TO_ADDRESS: ${MAIL_TRANSPORT_TO_ADDRESS} 
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_FILENAME: ${DATABASE_FILENAME}
      JWT_SECRET: ${JWT_SECRET}
      # SECRET: "${BACKEND_SECRET}"
      DATABASE_CLIENT: mysql
      DATABASE_HOST: db
      DATABASE_PORT: 3306
      DATABASE_NAME: strapi
      DATABASE_USERNAME: strapi
      DATABASE_PASSWORD: strapi
      DATABASE_SSL: 'false'
    stop_signal: SIGINT
    depends_on:
      db:
        condition: service_healthy
    networks:
      m4p0-nuxt-strapi: {}

  db:
    image: mariadb
    volumes:
      - ./data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: strapi
      MYSQL_DATABASE: strapi
      MYSQL_USER: strapi
      MYSQL_PASSWORD: strapi
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55
    networks:
      m4p0-nuxt-strapi: {}

  frontend:
    container_name: m4p0-nuxt
    #image: "${DOCKER_EXTERNAL_REPO}/${DOCKER_FRONTEND_IMAGE}:${DOCKER_IMAGE_VERSION}"
    build:
      context: ./nuxt
      dockerfile: docker/Dockerfile.local
    ports:
      - 3000:3000
    volumes:
      - ./nuxt:/srv/app
    environment:
      NODE_ENV: development
      TEXT_CONTENT_API: ${TEXT_CONTENT_API}
    # labels:
    #   - "traefik.frontend.rule=Host:www.${BLOG_DOMAIN},${BLOG_DOMAIN}"
    #   - traefik.docker.network:proxy-net
    #   - traefik.enable=true
    networks:
      m4p0-nuxt-strapi: {}

  frontend-gateway:
    container_name: m4p0-frontend-gateway
    build:
      context: ./frontend-gateway/nginx
    ports:
      - 2020:80
    environment:
      NUXT_SERVER_URL: ${NUXT_SERVER_URL}
      STRAPI_SERVER_URL: ${STRAPI_SERVER_URL}
    networks:
      m4p0-nuxt-strapi: {}

networks:
  m4p0-nuxt-strapi: {}
